name: Main Docker CI Build/Test Processes...  

on:
  # Triggers the workflow on push or pull request events but only for the main branch 
  registry_package:
    types: [published , updated] 
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      id:
        description: 'run identifier'
        required: false
        
  # Branch filtered to master only
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 0 1 * *'

# Tasks and jobs to run 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Login to DockerHub for CR image repo...
      run: |
        echo ${{ secrets.DOCKERHUB_PASSWORD }} | \
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      # Build tasks to run... 

    - name: Build the .Net7 Docker image...
      run: |
        (cd csharp/WebRestAPI/WebRestAPI && \
        docker build . --file Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/webrestapi:csv7 && \
        docker run --rm -t -d -p 5556:80 ${{ secrets.DOCKERHUB_USERNAME }}/webrestapi:csv7 && \
        sleep 10 && curl localhost:5556/api/repo/repostring && \
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/webrestapi:csv7)
    - name: Build the CPP Docker image and test...
      run: |
        (cd CPPExamples/Std11 && \
        docker build . -f Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/cppdemo:latest && \
        docker run --rm -t ${{ secrets.DOCKERHUB_USERNAME }}/cppdemo:latest && \
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/cppdemo:latest)
    - name: Build the CPP MessageUtils Docker image...
      run: |
        (cd CPPExamples/MessageUtils && \
        docker build . -f Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/messageutils:latest && \
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/messageutils:latest)
    - name: Build the NodeJS Docker image...
      run: |
        (cd nodejs/webapp && \
        docker build . --file Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/nodejs:1.0 && \
        docker run --rm -t -d -p 5557:8080 ${{ secrets.DOCKERHUB_USERNAME }}/nodejs:1.0 && \
        sleep 10 && curl localhost:5557/repostring && \
        curl localhost:5557/ &&
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/nodejs:1.0)
    - name: Stop containers...
      run: (docker stop $(docker container ls -q))

# End of job
