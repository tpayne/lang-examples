name: GitHub CR Build and Push

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [master]
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
  pull_request:
    branches: [master]
  schedule:
    - cron: "0 0 1 * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      id:
        description: "run identifier"
        required: false
        default: "Job001"
        type: string

env:
  REGISTRY: ghcr.io
  # IMAGE_NAME: ${{ github.repository }}
  # github.repository as <account>/<repo>

jobs:
  buildPush:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: ${{github.event.inputs.id}}
        run: echo Running job ${{github.event.inputs.id}}
      - name: Checkout repository
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@4c0219f9ac95b02789c1075625400b2acbff50b1

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@0a5a6d545fb45047924af7df26cac945aa69ad68
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
#      - name: Extract .Net Docker metadata
#        id: meta
#        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175
#        with:
#          images: ${{ env.REGISTRY }}/${{ github.actor }}/webrestapi

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
#      - name: Build and Push .Net Docker image
#        id: build-and-push
#        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825
#        with:
#          context: csharp/WebRestAPI/WebRestAPI/
#          push: ${{ github.event_name != 'pull_request' }}
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract CPPDemo Docker metadata
        id: meta1
        uses: docker/metadata-action@35e9aff4f5d665b5aa8a8f2adffaf8a1b5f49cc0
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/cppdemo

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and Push CPPDemo Docker image
        id: build-and-push1
        uses: docker/build-push-action@f05b754b571695bf93164b9b54cb8e2e96e22706
        with:
          context: CPPExamples/Std11/
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta1.outputs.tags }}
          labels: ${{ steps.meta1.outputs.labels }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract CPP Docker metadata
        id: meta2
        uses: docker/metadata-action@35e9aff4f5d665b5aa8a8f2adffaf8a1b5f49cc0
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/MessageUtils

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and Push CPP Docker image
        id: build-and-push2
        uses: docker/build-push-action@f05b754b571695bf93164b9b54cb8e2e96e22706
        with:
          context: CPPExamples/MessageUtils
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta2.outputs.tags }}
          labels: ${{ steps.meta2.outputs.labels }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract NodeJS Docker metadata
        id: meta3
        uses: docker/metadata-action@35e9aff4f5d665b5aa8a8f2adffaf8a1b5f49cc0
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/nodejs

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and Push NodeJS Docker image
        id: build-and-push3
        uses: docker/build-push-action@f05b754b571695bf93164b9b54cb8e2e96e22706
        with:
          context: nodejs/webapp/
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta3.outputs.tags }}
          labels: ${{ steps.meta3.outputs.labels }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract NodeJS DB Docker metadata
        id: meta4
        uses: docker/metadata-action@35e9aff4f5d665b5aa8a8f2adffaf8a1b5f49cc0
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/nodejsdb

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and Push NodeJS DB Docker image
        id: build-and-push4
        uses: docker/build-push-action@f05b754b571695bf93164b9b54cb8e2e96e22706
        with:
          context: nodejs/dbops/app/
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta4.outputs.tags }}
          labels: ${{ steps.meta4.outputs.labels }}
